name: Integration Tests
 
on:
  pull_request:
    branches:
      - main
  workflow_dispatch: 

jobs:
  test:
    runs-on: ubuntu-latest
    sqlserver:
      image: mcr.microsoft.com/mssql/server:2022-latest 
      environment:
        ACCEPT_EULA: "Y"
        SA_PASSWORD: "YourStrong!Passw0rd"
      ports:
        - "1433:1433"
      healthcheck:
        test: ["CMD-SHELL", "until /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong!Passw0rd' -Q 'SELECT 1' > /dev/null 2>&1; do echo 'Database is not ready yet. Retrying in 5 seconds...'; sleep 5; done"]
        interval: 10s
        retries: 5
        start_period: 61s

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Wait for SQL Server
        run: |
          for i in {1..30}; do
            if /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q "SELECT 1" &>/dev/null; then
              echo "SQL Server is ready!"
              exit 0
            fi
            echo "Waiting for SQL Server..."
            sleep 5
          done
          echo "SQL Server did not become ready in time."
          exit 1

      - name: Create Test Database
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q "CREATE DATABASE TestDb"

      - name: Run Tests
        env:
          ASPNETCORE_ENVIRONMENT: "Testing"
          ConnectionStrings__DefaultConnection: "Server=localhost,1433;Database=TestDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True"
        run: dotnet test --filter Category=Integration --logger trx --results-directory TestResults

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults
