version: '3.9'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    restart: always
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      TrustServerCertificate: "true"
    ports:
      - "1433:1433"
    networks:
      - backend-network
    volumes:
      - sqlserver_data:/var/opt/mssql

  integration-tests:
    build:
      context: .
      dockerfile: MvcMovie.IntegrationTests/Dockerfile
    depends_on:
      - sqlserver
    networks:
      - backend-network
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=TestDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;

  backend:
    build:
      context: .
      dockerfile: MvcMovie/Dockerfile
    depends_on:
      integration-tests:
        condition: service_completed_successfully
      sqlserver:
        condition: service_healthy
    networks:
      - backend-network
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=MvcMovieDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
    expose:
      - "5000"
      - "5001"
    ports:
      - "5019:5000" 


  frontend:
    build:
      context: .
      dockerfile: my-movie-front/Dockerfile
    depends_on:
      - backend
    networks:
      - frontend-network
    expose:
      - "80"

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - frontend-network
      - backend-network

networks:
  backend-network:
  frontend-network:

volumes:
  sqlserver_data:
